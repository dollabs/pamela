;; Copyright Â© 2016 Dynamic Object Language Labs Inc.
;;
;; This software is licensed under the terms of the
;; Apache License, Version 2.0 which can be found in
;; the file LICENSE at the root of this distribution.

;; Acknowledgement and Disclaimer:
;; This material is based upon work supported by the Army Contracting
;; and DARPA under contract No. W911NF-15-C-0005.
;; Any opinions, findings and conclusions or recommendations expressed
;; in this material are those of the author(s) and do necessarily reflect the
;; views of the Army Contracting Command and DARPA.

(defpclass plant []
  :meta {:doc "The Plant API"}

  :methods [(defpmethod one
              {} [])
            (defpmethod two
              {} [])
            (defpmethod three
              {} [])
            (defpmethod four
              {} [])
            (defpmethod five
              {} [])
            (defpmethod six
              {} [])
            ])

(defpclass choice-tpn [plant]
  :meta {:doc "New choose multiple example"}
  :methods [(defpmethod choose-multiple
              {}
              []
              (choose :min 2 ;; or :exactly 2
                      ;;We might as well also include :max N
                      :max 4
                      ;;If none of the cardinality options is specified, it's implicitly:
                      ;; (and (:min 1) (:max 1)) OR just (:exactly 1)
                ;; here at least two (but no more than four) of these choices will be executed by
                ;; the planner like it was a parallel block of those 2-4 choices
                (choice (plant.one))
                (choice (plant.two))
                (choice (plant.three))
                (choice (plant.four))
                (choice (plant.five))
                (choice (plant.six))
                ))])
