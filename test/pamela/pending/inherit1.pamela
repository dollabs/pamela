;; Copyright Â© 2016 Dynamic Object Language Labs Inc.
;;
;; This software is licensed under the terms of the
;; Apache License, Version 2.0 which can be found in
;; the file LICENSE at the root of this distribution.

;; Acknowledgement and Disclaimer:
;; This material is based upon work supported by the Army Contracting
;; and DARPA under contract No. W911NF-15-C-0005.
;; Any opinions, findings and conclusions or recommendations expressed
;; in this material are those of the author(s) and do necessarily reflect the
;; views of the Army Contracting Command and DARPA.

;; inheritance example: simple

(defpclass lightvals []
  :meta {:version "0.2.0"
         :doc "Enum for lighting values"}
  :modes [:bright :dark])

(defpclass bulb [vcc vdd]
  :meta {:version "0.2.2"
         :depends [[lightvals "0.2.0"]]
         :doc "A light bulb"
         :icon "bulb.svg"}

  :fields {:anode vcc
           :cathode vdd
           :illumination {:initial (mode-of lightvals :dark)
                          :access :public}}
  :modes {:on (= :illumination (mode-of lightvals :bright))
          :off (= :illumination (mode-of lightvals :dark))
          :fail true}
  :transitions {:off:on {:pre (and
                                :off
                                (= :anode (mode-of pwrvals :high))
                                (= :illumination (mode-of lightvals :bright)))
                         :post :on
                         :bounds [1 3]
                         :doc "turning on bulb"}
                :on:off {:pre (and
                                :on
                                (= :anode (mode-of pwrvals :none))
                                (= :illumination (mode-of lightvals :dark)))
                         :post :off
                         :bounds [1 3]
                         :doc "turning off bulb"}
                :*:fail {:probability (lvar "pfbulb")
                         :doc "spontaneous bulb failure"}})


(defpclass sensed-bulb [vcc vdd]
  :inherit [(bulb vcc vdd)]
  :meta {:version "0.2.2"
         :depends [[lightvals "0.2.0"]]
         :doc "A sensed light bulb"
         :icon "bulb.svg"}

  :fields {;; :anode vcc ;; INHERITED
           ;; :cathode vdd ;; INHERITED
           ;; :illumination {:initial (mode-of lightvals :dark)
           ;;                :access :public} ;; INHERITED
           :sensed-illumination {:initial (mode-of lightvals :dark)
                                 :access :public
                                 :observable true}}
  :modes {:on (and
                (= :illumination (mode-of lightvals :bright))
                (= :sensed-illumination (mode-of lightvals :bright)))
          :off (and
                 (= :illumination (mode-of lightvals :dark))
                 (= :sensed-illumination (mode-of lightvals :dark)))
          ;; :fail true ;; INHERITED
          }
  :transitions {:off:on {:pre (and
                                :off
                                (= :anode (mode-of pwrvals :high))
                                (= :sensed-illumination (mode-of lightvals :bright)))
                         :post :on
                         :bounds [1 3]
                         :doc "turning on bulb"}
                :on:off {:pre (and
                                :on
                                (= :anode (mode-of pwrvals :none))
                                (= :sensed-illumination (mode-of lightvals :dark)))
                         :post :off
                         :bounds [1 3]
                         :doc "turning off bulb"}
                ;; :*:fail {:probability (lvar "pfbulb") ;; INHERITED
                ;;          :doc "spontaneous bulb failure"}
                })
