[:pamela
 [:defpclass
  [:symbol "pwrvals"]
  [:args]
  [:option
   [:meta
    [:meta-entry [:version [:string "0.2.0"]]]
    [:meta-entry [:doc [:string "Enum for power values"]]]]]
  [:option
   [:modes [:mode-enum [:keyword ":high"] [:keyword ":none"]]]]]
 [:defpclass
  [:symbol "box"]
  [:args]
  [:option
   [:meta
    [:meta-entry [:version [:string "0.0.1"]]]
    [:meta-entry
     [:depends [:dep [:symbol "pwrvals"] [:string "0.2.0"]]]]
    [:meta-entry [:icon [:string "box.svg"]]]
    [:meta-entry [:doc [:string "Box"]]]]]
  [:option
   [:fields
    [:field
     [:symbol "ball-in-motion"]
     [:field-init
      [:initial [:field-type [:literal [:boolean [:FALSE]]]]]]
     [:field-init [:observable [:boolean [:TRUE]]]]
     [:field-init [:access [:keyword ":public"]]]]
    [:field
     [:symbol "fred"]
     [:field-type [:lvar-ctor [:string "fred"]]]]
    [:field [:symbol "dummy"] [:field-type [:lvar-ctor]]]
    [:field
     [:symbol "pwr"]
     [:field-type
      [:mode-ref
       [:symbol-ref [:symbol "pwrvals"]]
       [:keyword ":high"]]]]]]
  [:option
   [:modes [:mode-enum [:keyword ":open"] [:keyword ":close"]]]]
  [:option
   [:transitions
    [:transition
     [:keyword ":open:close"]
     [:trans-map
      [:trans [:pre [:keyword ":open"]]]
      [:trans [:post [:keyword ":close"]]]
      [:trans [:doc [:string "lid closes"]]]]]
    [:transition
     [:keyword ":close:open"]
     [:trans-map
      [:trans [:pre [:keyword ":close"]]]
      [:trans
       [:post
        [:cond-expr
         [:and-expr
          [:cond-expr
           [:equal-expr
            [:cond-operand [:symbol-ref [:symbol "pwr"]]]
            [:cond-operand
             [:mode-ref
              [:symbol-ref [:symbol "pwrvals"]]
              [:keyword ":high"]]]]]
          [:cond-expr
           [:equal-expr
            [:cond-operand [:symbol-ref [:symbol "fred"]]]
            [:cond-operand [:literal [:number [:float "123.456"]]]]]]
          [:cond-operand
           [:mode-ref
            [:symbol-ref [:symbol "this"]]
            [:keyword ":open"]]]]]]]
      [:trans [:doc [:string "lid opens"]]]
      [:trans
       [:opt-bounds
        [:bounds
         [:bounds-literal
          [:number [:integer "12"]]
          [:number [:integer "34"]]]]]]
      [:trans [:cost [:number-ref [:number [:integer "10"]]]]]
      [:trans [:reward [:number-ref [:number [:integer "100"]]]]]
      [:trans
       [:probability [:number-ref [:number [:float "0.99"]]]]]]]]]
  [:option
   [:methods
    [:defpmethod
     [:symbol "open-lid"]
     [:cond-map
      [:cond [:pre [:keyword ":close"]]]
      [:cond [:post [:keyword ":open"]]]]
     [:args]]
    [:defpmethod
     [:symbol "close-lid"]
     [:cond-map
      [:cond [:pre [:keyword ":open"]]]
      [:cond [:post [:keyword ":close"]]]
      [:cond [:doc [:string "Close method"]]]
      [:cond
       [:opt-bounds
        [:bounds
         [:bounds-literal
          [:number [:integer "123"]]
          [:number [:integer "456"]]]]]]
      [:cond [:cost [:number-ref [:number [:integer "100"]]]]]
      [:cond [:reward [:number-ref [:number [:integer "1000"]]]]]
      [:cond [:controllable [:boolean [:TRUE]]]]]
     [:args]]
    [:defpmethod
     [:symbol "reset"]
     [:cond-map [:cond [:post [:keyword ":open"]]]]
     [:args]]]]]
 [:defpclass
  [:symbol "cannon"]
  [:args]
  [:option
   [:fields
    [:field
     [:symbol "ammunitions"]
     [:field-init
      [:initial [:field-type [:literal [:number [:integer "5"]]]]]]
     [:field-init [:observable [:boolean [:TRUE]]]]]
    [:field
     [:symbol "ready"]
     [:field-init
      [:initial [:field-type [:literal [:boolean [:FALSE]]]]]]
     [:field-init [:access [:keyword ":public"]]]
     [:field-init [:observable [:boolean [:TRUE]]]]]]]
  [:option
   [:methods
    [:defpmethod
     [:symbol "fire"]
     [:args [:symbol "arg1"] [:symbol "arg2"]]]
    [:defpmethod
     [:symbol "reset"]
     [:cond-map
      [:cond
       [:opt-bounds
        [:bounds
         [:bounds-literal
          [:number [:integer "1"]]
          [:number [:integer "2"]]]]]]]
     [:args]]]]]
 [:defpclass
  [:symbol "game"]
  [:args [:symbol "power"]]
  [:option
   [:fields
    [:field
     [:symbol "cannon-f"]
     [:field-type
      [:pclass-ctor
       [:symbol "cannon"]
       [:pclass-ctor-option [:id [:argval [:string "first-cannon"]]]]
       [:pclass-ctor-option [:interface [:argval [:string "ZMQ"]]]]]]]
    [:field
     [:symbol "box-f"]
     [:field-type [:pclass-ctor [:symbol "box"]]]]]]
  [:option
   [:modes
    [:mode-map
     [:mode-init [:keyword ":wacky"] [:cond-expr [:TRUE]]]
     [:mode-init
      [:keyword ":bizarre"]
      [:cond-expr
       [:equal-expr
        [:cond-operand
         [:symbol-ref [:symbol "cannon-f"] [:symbol "ammunitions"]]]
        [:cond-operand [:literal [:number [:integer "5"]]]]]]]
     [:mode-init
      [:keyword ":weird"]
      [:cond-expr
       [:and-expr
        [:cond-expr
         [:equal-expr
          [:cond-operand
           [:symbol-ref [:symbol "box-f"] [:symbol "pwr"]]]
          [:cond-operand
           [:mode-ref
            [:symbol-ref [:symbol "pwrvals"]]
            [:keyword ":high"]]]]]
        [:cond-expr
         [:equal-expr
          [:cond-operand [:symbol-ref [:symbol "power"]]]
          [:cond-operand
           [:mode-ref
            [:symbol-ref [:symbol "pwrvals"]]
            [:keyword ":high"]]]]]
        [:cond-expr
         [:equal-expr
          [:cond-operand [:symbol-ref [:symbol "global-state"]]]
          [:cond-operand [:literal [:boolean [:TRUE]]]]]]]]]]]]
  [:option
   [:methods
    [:defpmethod
     [:symbol "main"]
     [:args [:symbol "initial-state"]]
     [:fn
      [:parallel
       [:fn-opt
        [:between-opt
         [:opt-bounds
          [:bounds
           [:bounds-literal
            [:number [:integer "1"]]
            [:number [:integer "60"]]]]]]]
       [:fn
        [:whenever
         [:cond-expr
          [:equal-expr
           [:cond-operand
            [:symbol-ref [:symbol "box-f"] [:symbol "ball-in-motion"]]]
           [:cond-operand [:literal [:boolean [:TRUE]]]]]]
         [:fn
          [:tell
           [:cond-expr
            [:equal-expr
             [:cond-operand [:symbol-ref [:symbol "all-clear"]]]
             [:cond-operand
              [:symbol-ref [:symbol "initial-state"]]]]]]]]]
       [:fn
        [:whenever
         [:cond-expr
          [:equal-expr
           [:cond-operand
            [:symbol-ref [:symbol "cannon-f"] [:symbol "ready"]]]
           [:cond-operand [:literal [:boolean [:TRUE]]]]]]
         [:fn
          [:unless
           [:cond-expr
            [:equal-expr
             [:cond-operand
              [:symbol-ref
               [:symbol "cannon-f"]
               [:symbol "ammunitions"]]]
             [:cond-operand [:literal [:number [:integer "0"]]]]]]
           [:fn
            [:try
             [:opt-bounds
              [:bounds
               [:bounds-literal
                [:number [:integer "2"]]
                [:number [:integer "20"]]]]]
             [:fn
              [:sequence
               [:fn
                [:assert
                 [:cond-expr
                  [:equal-expr
                   [:cond-operand [:symbol-ref [:symbol "box-f"]]]
                   [:cond-operand
                    [:mode-ref
                     [:symbol-ref [:symbol "box"]]
                     [:keyword ":open"]]]]]]]
               [:fn
                [:maintain
                 [:cond-expr
                  [:equal-expr
                   [:cond-operand [:symbol-ref [:symbol "box-f"]]]
                   [:cond-operand
                    [:mode-ref
                     [:symbol-ref [:symbol "box"]]
                     [:keyword ":open"]]]]]
                 [:fn
                  [:sequence
                   [:fn-opt [:label [:keyword ":my"]]]
                   [:fn-opt
                    [:between-opt
                     [:opt-bounds
                      [:bounds
                       [:bounds-literal
                        [:number [:integer "98"]]
                        [:number [:integer "101"]]]]]]]
                   [:fn-opt
                    [:between-opt
                     [:cost-le
                      [:number-ref [:number [:integer "11"]]]]]]
                   [:fn-opt
                    [:between-opt
                     [:reward-ge
                      [:number-ref [:number [:integer "90"]]]]]]
                   [:fn
                    [:method-fn
                     [:symbol-ref
                      [:symbol "cannon-f"]
                      [:symbol "fire"]]
                     [:method-opt
                      [:opt-bounds
                       [:bounds
                        [:bounds-literal
                         [:number [:integer "1"]]
                         [:number [:integer "7"]]]]]]
                     [:argval [:number [:float "123.45"]]]
                     [:argval [:string "456"]]]]
                   [:fn
                    [:ask
                     [:cond-expr
                      [:equal-expr
                       [:cond-operand
                        [:symbol-ref [:symbol "all-clear"]]]
                       [:cond-operand [:literal [:boolean [:TRUE]]]]]]
                     [:opt-bounds
                      [:bounds
                       [:bounds-literal
                        [:number [:integer "200"]]
                        [:number [:integer "300"]]]]]]]]]]]
               [:fn
                [:method-fn
                 [:symbol-ref
                  [:symbol "box-f"]
                  [:symbol "close-lid"]]]]
               [:fn
                [:choose
                 [:choose-opt [:fn-opt [:label [:keyword ":pickme"]]]]
                 [:choose-opt
                  [:fn-opt
                   [:between-opt
                    [:opt-bounds
                     [:bounds
                      [:bounds-literal
                       [:number [:integer "36"]]
                       [:number [:integer "37"]]]]]]]]
                 [:choose-opt
                  [:fn-opt
                   [:between-opt
                    [:cost-le
                     [:number-ref [:number [:integer "45"]]]]]]]
                 [:choose-opt
                  [:fn-opt
                   [:between-opt
                    [:reward-ge
                     [:number-ref [:number [:integer "46"]]]]]]]
                 [:choice
                  [:choice-opt [:label [:keyword ":chance"]]]
                  [:choice-opt
                   [:cost [:number-ref [:number [:integer "9"]]]]]
                  [:choice-opt
                   [:reward [:number-ref [:number [:integer "99"]]]]]
                  [:choice-opt
                   [:probability
                    [:number-ref [:number [:float "0.67"]]]]]
                  [:fn
                   [:delay
                    [:delay-opt
                     [:fn-opt [:label [:keyword ":aaa"]]]]]]]
                 [:choice
                  [:choice-opt
                   [:opt-bounds
                    [:bounds
                     [:bounds-literal
                      [:number [:integer "7"]]
                      [:number [:integer "8"]]]]]]
                  [:choice-opt
                   [:guard
                    [:cond-expr
                     [:equal-expr
                      [:cond-operand [:symbol-ref [:symbol "box-f"]]]
                      [:cond-operand
                       [:mode-ref
                        [:symbol-ref [:symbol "box"]]
                        [:keyword ":open"]]]]]]]
                  [:fn
                   [:delay
                    [:delay-opt
                     [:fn-opt [:label [:keyword ":bbb"]]]]]]]]]]]
             [:CATCH]
             [:fn
              [:sequence
               [:fn
                [:parallel
                 [:fn
                  [:method-fn
                   [:symbol-ref [:symbol "box-f"] [:symbol "reset"]]]]
                 [:fn
                  [:method-fn
                   [:symbol-ref
                    [:symbol "cannon-f"]
                    [:symbol "reset"]]]]]]
               [:fn
                [:delay
                 [:delay-opt
                  [:fn-opt
                   [:between-opt
                    [:opt-bounds
                     [:bounds
                      [:bounds-literal
                       [:number [:integer "30"]]
                       [:number [:integer "30"]]]]]]]]]]]]]]]]]]
       [:fn
        [:slack-sequence
         [:fn-opt [:label [:keyword ":slack-sequence"]]]
         [:fn
          [:method-fn
           [:symbol-ref [:symbol "box-f"] [:symbol "reset"]]]]
         [:fn
          [:method-fn
           [:symbol-ref [:symbol "cannon-f"] [:symbol "reset"]]]]]]
       [:fn
        [:slack-parallel
         [:fn-opt [:label [:keyword ":slack-parallel"]]]
         [:fn
          [:method-fn
           [:symbol-ref [:symbol "box-f"] [:symbol "reset"]]]]
         [:fn
          [:method-fn
           [:symbol-ref [:symbol "cannon-f"] [:symbol "reset"]]]]]]
       [:fn
        [:optional
         [:fn-opt [:label [:keyword ":optional"]]]
         [:fn
          [:method-fn
           [:symbol-ref [:symbol "cannon-f"] [:symbol "reset"]]]]]]
       [:fn
        [:soft-sequence
         [:fn-opt [:label [:keyword ":soft-sequence"]]]
         [:fn
          [:method-fn
           [:symbol-ref [:symbol "box-f"] [:symbol "reset"]]]]
         [:fn
          [:method-fn
           [:symbol-ref [:symbol "cannon-f"] [:symbol "reset"]]]]]]
       [:fn
        [:soft-parallel
         [:fn-opt [:label [:keyword ":soft-parallel"]]]
         [:fn
          [:method-fn
           [:symbol-ref [:symbol "box-f"] [:symbol "reset"]]]]
         [:fn
          [:method-fn
           [:symbol-ref [:symbol "cannon-f"] [:symbol "reset"]]]]]]]]
     [:between-stmt
      [:between
       [:keyword ":my"]
       [:keyword ":pickme"]
       [:between-opt
        [:opt-bounds
         [:bounds
          [:bounds-literal [:number [:integer "50"]] [:INFINITY]]]]]]]
     [:between-stmt
      [:between-starts
       [:keyword ":doit"]
       [:keyword ":aaa"]
       [:between-opt
        [:cost-le [:number-ref [:number [:integer "51"]]]]]]]
     [:between-stmt
      [:between-ends
       [:keyword ":chance"]
       [:keyword ":bbb"]
       [:between-opt
        [:reward-ge [:number-ref [:number [:integer "17"]]]]]]]]
    [:defpmethod
     [:symbol "main-test"]
     [:cond-map
      [:cond [:doc [:string "Unit test method entry point"]]]]
     [:args]
     [:fn
      [:method-fn
       [:symbol-ref [:symbol "main"]]
       [:argval [:boolean [:TRUE]]]]]]]]]]
