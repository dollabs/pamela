[:pamela
 [:defpclass
  [:symbol "box"]
  [:args]
  [:option
   [:fields
    [:field
     [:symbol "ball-in-motion"]
     [:field-init
      [:initial [:field-type [:literal [:boolean [:FALSE]]]]]]
     [:field-init [:observable [:boolean [:TRUE]]]]
     [:field-init [:access [:keyword ":public"]]]]]]
  [:option
   [:modes [:mode-enum [:keyword ":open"] [:keyword ":close"]]]]
  [:option
   [:methods
    [:defpmethod
     [:symbol "open-lid"]
     [:cond-map
      [:cond [:pre [:keyword ":close"]]]
      [:cond [:post [:keyword ":open"]]]]
     [:args]]
    [:defpmethod
     [:symbol "close-lid"]
     [:cond-map
      [:cond [:pre [:keyword ":open"]]]
      [:cond [:post [:keyword ":close"]]]]
     [:args]]
    [:defpmethod
     [:symbol "reset"]
     [:cond-map [:cond [:post [:keyword ":open"]]]]
     [:args]]]]]
 [:defpclass
  [:symbol "cannon"]
  [:args]
  [:option
   [:fields
    [:field
     [:symbol "ammunitions"]
     [:field-init
      [:initial [:field-type [:literal [:number [:integer "5"]]]]]]
     [:field-init [:observable [:boolean [:TRUE]]]]]
    [:field
     [:symbol "ready"]
     [:field-init
      [:initial [:field-type [:literal [:boolean [:FALSE]]]]]]
     [:field-init [:access [:keyword ":public"]]]
     [:field-init [:observable [:boolean [:TRUE]]]]]]]
  [:option
   [:methods
    [:defpmethod
     [:symbol "fire"]
     [:args [:symbol "arg1"] [:symbol "arg2"]]]
    [:defpmethod [:symbol "reset"] [:args]]]]]
 [:defpclass
  [:symbol "game"]
  [:args]
  [:option
   [:fields
    [:field
     [:symbol "cannon-f"]
     [:field-type [:pclass-ctor [:symbol "cannon"]]]]
    [:field
     [:symbol "box-f"]
     [:field-type [:pclass-ctor [:symbol "box"]]]]]]
  [:option
   [:methods
    [:defpmethod
     [:symbol "main"]
     [:args]
     [:fn
      [:parallel
       [:fn-opt
        [:between-opt
         [:opt-bounds
          [:bounds
           [:bounds-literal
            [:expr [:number [:integer "1"]]]
            [:expr [:number [:integer "60"]]]]]]]]
       [:fn
        [:whenever
         [:cond-expr
          [:equal-expr
           [:cond-operand
            [:symbol-ref [:symbol "box-f"] [:symbol "ball-in-motion"]]]
           [:cond-operand [:literal [:boolean [:TRUE]]]]]]
         [:fn
          [:tell
           [:cond-expr
            [:equal-expr
             [:cond-operand [:symbol-ref [:symbol "all-clear"]]]
             [:cond-operand [:literal [:boolean [:TRUE]]]]]]]]]]
       [:fn
        [:whenever
         [:cond-expr
          [:equal-expr
           [:cond-operand
            [:symbol-ref [:symbol "cannon-f"] [:symbol "ready"]]]
           [:cond-operand [:literal [:boolean [:TRUE]]]]]]
         [:fn
          [:unless
           [:cond-expr
            [:equal-expr
             [:cond-operand
              [:symbol-ref
               [:symbol "cannon-f"]
               [:symbol "ammunitions"]]]
             [:cond-operand [:literal [:number [:integer "0"]]]]]]
           [:fn
            [:try
             [:opt-bounds
              [:bounds
               [:bounds-literal
                [:expr [:number [:integer "2"]]]
                [:expr [:number [:integer "20"]]]]]]
             [:fn
              [:sequence
               [:fn
                [:assert
                 [:cond-expr
                  [:equal-expr
                   [:cond-operand [:symbol-ref [:symbol "box-f"]]]
                   [:cond-operand
                    [:mode-ref
                     [:symbol-ref [:symbol "box"]]
                     [:keyword ":open"]]]]]]]
               [:fn
                [:maintain
                 [:cond-expr
                  [:equal-expr
                   [:cond-operand [:symbol-ref [:symbol "box-f"]]]
                   [:cond-operand
                    [:mode-ref
                     [:symbol-ref [:symbol "box"]]
                     [:keyword ":open"]]]]]
                 [:fn
                  [:sequence
                   [:fn
                    [:method-fn
                     [:symbol-ref
                      [:symbol "cannon-f"]
                      [:symbol "fire"]]
                     [:method-opt
                      [:opt-bounds
                       [:bounds
                        [:bounds-literal
                         [:expr [:number [:integer "1"]]]
                         [:expr [:number [:integer "7"]]]]]]]
                     [:argval [:number [:integer "123"]]]
                     [:argval [:string "456"]]]]
                   [:fn
                    [:ask
                     [:cond-expr
                      [:equal-expr
                       [:cond-operand
                        [:symbol-ref [:symbol "all-clear"]]]
                       [:cond-operand
                        [:literal [:boolean [:TRUE]]]]]]]]]]]]
               [:fn
                [:method-fn
                 [:symbol-ref
                  [:symbol "box-f"]
                  [:symbol "close-lid"]]]]]]
             [:CATCH]
             [:fn
              [:sequence
               [:fn
                [:parallel
                 [:fn
                  [:method-fn
                   [:symbol-ref [:symbol "box-f"] [:symbol "reset"]]]]
                 [:fn
                  [:method-fn
                   [:symbol-ref
                    [:symbol "cannon-f"]
                    [:symbol "reset"]]]]]]
               [:fn
                [:delay
                 [:delay-opt
                  [:fn-opt
                   [:between-opt
                    [:opt-bounds
                     [:bounds
                      [:bounds-literal
                       [:expr [:number [:integer "30"]]]
                       [:expr
                        [:number
                         [:integer "30"]]]]]]]]]]]]]]]]]]]]]]]]]]
